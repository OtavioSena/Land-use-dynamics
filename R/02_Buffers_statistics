# Ot√°vio S. Monte
# Last update: 17.Oct.2024

# Start
rm(list=ls())
cat("\014")

# Load packages
library(vegan)
library(dplyr)
library(purrr)
library(ggplot2)

# LURE ----
rm(list=ls())
cat("\014")
# Data
dat = read.csv("data/processed/tables/lure.csv")

### 

# Summary of lakes and reservoirs
dat = subset(Use22, Water_Type == "Lake")
dat = subset(Use22, Water_Type == "Reservoir")

mean = round(mean(dat$LURE2022), 3)
sd   = round(sd(dat$LURE2022), 3)
min  = round(min(dat$LURE2022), 3)
max  = round(max(dat$LURE2022), 3)

###

# Model
lakes = lm(LURE2022 ~ Distance, subset = Water_Type == "Lake", data = dat)

reservoirs = lm(LURE2022 ~ Distance, subset = Water_Type == "Reservoir", data = dat)

interaction = lm(LURE2022 ~ Water_Type * Distance, data = dat)
anova(interaction, test = "F")[3:4,]

# LUCR ----
rm(list=ls())
cat("\014")

# Data
dat = read.csv("data/processed/tables/lucr.csv")

#dat$LURE1985 <- ifelse(dat$LURE1985 == 0 & dat$LURE2022 != 0, 0.01, dat$LURE1985)
#dat$LUCR = round((((dat$LURE2022 - dat$LURE1985)/dat$LURE1985)*100), 3)
#dat$LUCR = ifelse(dat$LURE1985 == 0 & dat$LURE2022 == 0, 0, dat$LUCR)
#dat$log_LUCR <- log10(dat$LUCR - min(dat$LUCR) + 1)

###

# Summary of lakes and reservoirs
dat = subset(dat, Water_Type == "Lake")
dat = subset(dat, Water_Type == "Reservoir")

mean = round(mean(dat$log_LUCR), 3)
sd   = round(sd(dat$log_LUCR), 3)
min  = round(min(dat$log_LUCR), 3)
max  = round(max(dat$log_LUCR), 3)

###

# Model
lakes = lm(log_LUCR ~ Distance, subset = Water_Type == "Lake", data = dat)

reservoirs = lm(log_LUCR ~ Distance, subset = Water_Type == "Reservoir", data = dat)

interaction = lm(log_LUCR ~ Water_Type * Distance, data = dat)
anova(interaction, test = "F")[3:4,]

# LUCV ----
rm(list=ls())
cat("\014")

# Data
dat = read.csv("data/processed/tables/lucv.csv")

### 

# Summary of lakes and reservoirs
dat = subset(Slope, Water_Type == "Lake")
dat = subset(Slope, Water_Type == "Reservoir")

mean = round(mean(dat$LUCV), 3)
sd   = round(sd(dat$LUCV), 3)
min  = round(min(dat$LUCV), 3)
max  = round(max(dat$LUCV), 3)

###

# Model
lakes = lm(LUCV ~ Distance, subset = Water_Type == "Lake", data = dat)

reservoirs = lm(LUCV ~ Distance, subset = Water_Type == "Reservoir", data = dat)

interaction = lm(LUCV ~ Water_Type * Distance, data = dat)
anova(interaction, test = "F")[3:4,]

# PCA ----
rm(list=ls())
cat("\014")

LURE = read.csv("data/processed/tables/lure.csv")
LUCR = read.csv("data/processed/tables/lucr.csv")
LUCV = read.csv("data/processed/tables/lucv.csv")

dat = reduce(list(LUCR, LUCV), full_join, by = c("Lake", "Water_Type", "Distance"))

dat = dat |> select(1:3, 5, 7, 9)

###
dat.cor = dat[,4:6]
cor(dat.cor)
plot(dat.cor)
###

dat.pca = dat |> select(6, 4, 5)
dat.pca = scale(dat.pca)

model.pca = prcomp(dat.pca, center = T, scale. = T)
summary(model.pca)
biplot(model.pca)

eigenvectors = model.pca$rotation

correlations = t(eigenvectors)*model.pca$sdev
correlations

eigenvectors = data.frame(eigenvectors)
eigenvectors$variable <- rownames(eigenvectors)

scores = model.pca$x
scores_pca = data.frame(dat[,1:3], scores)
write.csv(scores_pca, "data/processed/tables/scores_pca.csv", row.names = FALSE)

evplot = function(ev)
{
  # Broken stick model (MacArthur 1957)
  n = length(ev)
  bsm = data.frame(j = seq(1:n), p = 0)
  bsm$p[1] = 1/n
  for (i in 2:n) bsm$p[i] = bsm$p[i - 1] + (1/(n + 1 - i))
  bsm$p = 100 * bsm$p/n
  print(100 * ev/sum(ev))  #% of variance
  print(bsm$p[n:1]) # Broken-stick percentage
  
  # Plot eigenvalues and % of variation for each axis
  op <- par(mfrow = c(2, 1))
  barplot(ev, main = "Eigenvalues", col = "bisque", las = 2)
  abline(h = mean(ev), col = "red")
  legend("topright", "Average eigenvalue", lwd = 1, col = 2, bty = "n")
  barplot(t(cbind(100 * ev/sum(ev), bsm$p[n:1])), beside = TRUE, 
          main = "% variation", col = c("bisque",2), las = 2)
  legend("topright", c("% eigenvalue", "Broken stick model"), 
         pch = 15, col = c("bisque", 2), bty = "n")
  par(op)
}

ev = model.pca$sdev^2
evplot(ev)

# LUd ----
rm(list=ls())
cat("\014")

# Data
dat = read.csv("data/processed/tables/scores_pca.csv")

###

# Summary of lakes and reservoirs
dat = subset(dat, Water_Type == "Lake")
dat = subset(dat, Water_Type == "Reservoir")

mean = round(mean(dat$PC1), 3)
sd   = round(sd(dat$PC1), 3)
min  = round(min(dat$PC1), 3)
max  = round(max(dat$PC1), 3)

###

# Model
lakes = lm(PC1 ~ Distance, subset = Water_Type == "Lake", data = dat)

reservoirs = lm(PC1 ~ Distance, subset = Water_Type == "Reservoir", data = dat)

interaction = lm(PC1 ~ Water_Type * Distance, data = dat)
anova(interaction, test = "F")[3:4,]

# SLUi ----
rm(list=ls())
cat("\014")

# Data
dat = read.csv("data/processed/tables/scores_pca.csv")

# Correlation PC1 ~ distance and Z-fisher effect-sizes
R = NULL
N = NULL
LUd = dat |> group_by(Lake) |> summarize(LUd = mean(PC1))

lake = unique(dat$Lake)
for(i in 1:nrow(dat)){
  tab = dat[which(dat$Lake == lake[i]),]
  if(nrow(tab) != 0) {
    R[i] = cor(tab$Distance, tab$PC1, method = "pearson")
    N[i] = nrow(tab)
  }
}

cor = data.frame(LUd, R, N)
cor$Z = 0.5 * log((1 + cor$R)/(1 - cor$R))
cor$Vz = 1/(cor$N - 3)
cor$SEz = sqrt(cor$Vz)
write.csv(cor, "data/processed/tables/slui.csv", row.names = FALSE)
